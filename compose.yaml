services:
  go: &go
    env_file:
      - path: .env
        required: false
    tty: true
    stdin_open: true
    build:
      context: .
      target: deps
    entrypoint: go
    command: help
    volumes:
      - .:/usr/src/app:delegated
      - gomod:/go/pkg/mod:cached
      - ${LOCAL_DEP_PATH:-..}:/local

  app:
    env_file: .env
    tty: true
    stdin_open: true
    build:
      context: .
      target: deps
    entrypoint: go
    command: run ./cmd/server/main.go
    ports:
      - ${PORT:-50051}:${PORT:-50051}
    develop:
      watch:
        - action: sync+restart
          path: ./cmd/
          target: /usr/src/app/cmd/
        - action: sync+restart
          path: ./internal/
          target: /usr/src/app/internal/
        - action: sync+restart
          path: ./go.mod
          target: /usr/src/app/go.mod
        - action: sync+restart
          path: ./go.sum
          target: /usr/src/app/go.sum
    volumes:
      - gomod:/go/pkg/mod:cached

  protoc:
    image: ghcr.io/gitops-ci-cd/protoc:latest
    entrypoint: protoc
    command:
      - --proto_path=./proto
      - --go_opt=module=github.com/gitops-ci-cd/schema
      - --go_out=./internal/_gen/pb
      - --go-grpc_opt=module=github.com/gitops-ci-cd/schema
      - --go-grpc_out=./internal/_gen/pb
      - ./proto/com/acme/schema/v1/person.proto
    volumes:
      - .:/usr/src/app:delegated

  install:
    <<: *go
    command: mod tidy

  lint:
    <<: *go
    command: vet ./...

  test:
    <<: *go
    command: test ./...

  db.migrate:
    <<: *go
    profiles: ["tools"]
    entrypoint: go run github.com/jackc/tern --config db/tern.conf --migrations db/migrations
    command: migrate

  db.new:
    <<: *go
    profiles: ["tools"]
    entrypoint: go run github.com/jackc/tern --migrations db/migrations
    command: table

  sqlc.generate:
    <<: *go
    profiles: ["tools"]
    entrypoint: go run github.com/sqlc-dev/sqlc/cmd/sqlc -f db/sqlc.yaml
    command: generate

  postgres:
    env_file: .env
    image: postgres:17
    user: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  gomod: {}
  postgres: {}
